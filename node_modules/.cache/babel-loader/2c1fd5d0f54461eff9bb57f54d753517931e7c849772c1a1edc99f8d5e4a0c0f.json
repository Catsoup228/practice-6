{"ast":null,"code":"import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport { addTodo, toggleTodo, deleteTodo, setFilter, Filters, ADD_TODO, TOGGLE_TODO, DELETE_TODO, SET_FILTER } from './actions';\nconst initialTodosState = {\n  todos: [],\n  filter: Filters.ALL\n};\nconst todosReducer = (state = initialTodosState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        todos: [...state.todos, {\n          id: state.todos.length + 1,\n          content: action.payload,\n          completed: false\n        }]\n      };\n    case TOGGLE_TODO:\n      return {\n        ...state,\n        todos: state.todos.map(todo => todo.id === action.payload ? {\n          ...todo,\n          completed: !todo.completed\n        } : todo)\n      };\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.payload)\n      };\n    case SET_FILTER:\n      return {\n        ...state,\n        filter: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst rootReducer = combineReducers({\n  todosState: todosReducer\n});\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: persistedReducer\n});\nconst persistor = persistStore(store);\nexport { store, persistor, Filters, addTodo, toggleTodo, deleteTodo, setFilter };","map":{"version":3,"names":["configureStore","combineReducers","storage","persistReducer","persistStore","addTodo","toggleTodo","deleteTodo","setFilter","Filters","ADD_TODO","TOGGLE_TODO","DELETE_TODO","SET_FILTER","initialTodosState","todos","filter","ALL","todosReducer","state","action","type","id","length","content","payload","completed","map","todo","rootReducer","todosState","persistConfig","key","persistedReducer","store","reducer","persistor"],"sources":["/home/tan/practice-6/src/store.js"],"sourcesContent":["import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport { addTodo, toggleTodo, deleteTodo, setFilter, Filters, ADD_TODO, TOGGLE_TODO, DELETE_TODO, SET_FILTER } from './actions';\n\nconst initialTodosState = {\n  todos: [],\n  filter: Filters.ALL,\n};\n\nconst todosReducer = (state = initialTodosState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        todos: [\n          ...state.todos,\n          {\n            id: state.todos.length + 1,\n            content: action.payload,\n            completed: false,\n          },\n        ],\n      };\n    case TOGGLE_TODO:\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === action.payload ? { ...todo, completed: !todo.completed } : todo\n        ),\n      };\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== action.payload),\n      };\n    case SET_FILTER:\n      return {\n        ...state,\n        filter: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  todosState: todosReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor, Filters, addTodo, toggleTodo, deleteTodo, setFilter };\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,cAAc,EAAEC,YAAY,QAAQ,eAAe;AAC5D,SAASC,OAAO,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,WAAW,EAAEC,UAAU,QAAQ,WAAW;AAE/H,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAEP,OAAO,CAACQ;AAClB,CAAC;AAED,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAGL,iBAAiB,EAAEM,MAAM,KAAK;EAC1D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKX,QAAQ;MACX,OAAO;QACL,GAAGS,KAAK;QACRJ,KAAK,EAAE,CACL,GAAGI,KAAK,CAACJ,KAAK,EACd;UACEO,EAAE,EAAEH,KAAK,CAACJ,KAAK,CAACQ,MAAM,GAAG,CAAC;UAC1BC,OAAO,EAAEJ,MAAM,CAACK,OAAO;UACvBC,SAAS,EAAE;QACb,CAAC;MAEL,CAAC;IACH,KAAKf,WAAW;MACd,OAAO;QACL,GAAGQ,KAAK;QACRJ,KAAK,EAAEI,KAAK,CAACJ,KAAK,CAACY,GAAG,CAAEC,IAAI,IAC1BA,IAAI,CAACN,EAAE,KAAKF,MAAM,CAACK,OAAO,GAAG;UAAE,GAAGG,IAAI;UAAEF,SAAS,EAAE,CAACE,IAAI,CAACF;QAAU,CAAC,GAAGE,IACzE;MACF,CAAC;IACH,KAAKhB,WAAW;MACd,OAAO;QACL,GAAGO,KAAK;QACRJ,KAAK,EAAEI,KAAK,CAACJ,KAAK,CAACC,MAAM,CAAEY,IAAI,IAAKA,IAAI,CAACN,EAAE,KAAKF,MAAM,CAACK,OAAO;MAChE,CAAC;IACH,KAAKZ,UAAU;MACb,OAAO;QACL,GAAGM,KAAK;QACRH,MAAM,EAAEI,MAAM,CAACK;MACjB,CAAC;IACH;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AAED,MAAMU,WAAW,GAAG5B,eAAe,CAAC;EAClC6B,UAAU,EAAEZ;AACd,CAAC,CAAC;AAEF,MAAMa,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACX9B;AACF,CAAC;AAED,MAAM+B,gBAAgB,GAAG9B,cAAc,CAAC4B,aAAa,EAAEF,WAAW,CAAC;AAEnE,MAAMK,KAAK,GAAGlC,cAAc,CAAC;EAC3BmC,OAAO,EAAEF;AACX,CAAC,CAAC;AAEF,MAAMG,SAAS,GAAGhC,YAAY,CAAC8B,KAAK,CAAC;AAErC,SAASA,KAAK,EAAEE,SAAS,EAAE3B,OAAO,EAAEJ,OAAO,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}